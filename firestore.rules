rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isOwner(userId);
      allow delete: if false; // Prevent user deletion
      
      // Nested collections
      match /classes/{classId} {
        allow read: if isOwner(userId);
        allow write: if isOwner(userId);
      }
      
      match /assignments/{assignmentId} {
        allow read: if isOwner(userId);
        allow write: if isOwner(userId);
      }
      
      match /events/{eventId} {
        allow read: if isOwner(userId);
        allow write: if isOwner(userId);
      }
    }
    
    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 