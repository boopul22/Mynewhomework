rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Helper function to check if user is an admin
    function isAdmin() {
      return isAuthenticated() && exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Settings collection
    match /settings/{document} {
      allow read: if true;  // Allow all users to read settings
      allow write: if isAdmin();  // Only admins can modify settings
    }
    
    // Users collection
    match /users/{userId} {
      // Allow reading user data
      allow read: if isOwner(userId) || isAdmin();
      
      // Allow user creation and updates
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if (isOwner(userId) && 
        (
          !request.resource.data.diff(resource.data).affectedKeys().hasAny(['subscription']) ||
          request.resource.data.subscription.status in ['active', 'cancelled', 'expired'] &&
          request.resource.data.subscription.questionsUsed >= 0
        )
      ) || isAdmin();
      
      // Allow subscription history subcollection
      match /subscriptionHistory/{historyId} {
        allow read: if isOwner(userId) || isAdmin();
        allow create: if (isOwner(userId) || isAdmin()) &&
          request.resource.data.type in ['trial_start', 'plan_change', 'cancellation'] &&
          request.resource.data.plan in ['free', 'homework-helper', 'homework-helper-essay'] &&
          request.resource.data.timestamp is string &&
          request.resource.data.endDate is string;
      }
      
      // Allow classes subcollection
      match /classes/{classId} {
        allow read: if isOwner(userId) || isAdmin();
        allow write: if isOwner(userId) || isAdmin();
      }
      
      // Allow assignments subcollection
      match /assignments/{assignmentId} {
        allow read: if isOwner(userId) || isAdmin();
        allow write: if isOwner(userId) || isAdmin();
      }
      
      // Allow events subcollection
      match /events/{eventId} {
        allow read: if isOwner(userId) || isAdmin();
        allow write: if isOwner(userId) || isAdmin();
      }
      
      // Allow search history subcollection
      match /searchHistory/{searchId} {
        allow read: if isOwner(userId) || isAdmin();
        allow create: if isOwner(userId);
      }
    }
    
    // Chat history collection
    match /chat_history/{messageId} {
      allow read: if isAuthenticated() && (request.auth.uid == resource.data.userId || isAdmin());
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.userId;
      allow update: if isAuthenticated() && request.auth.uid == resource.data.userId;
      allow delete: if isAuthenticated() && (request.auth.uid == resource.data.userId || isAdmin());
    }
    
    // Feedback collection
    match /feedback/{feedbackId} {
      allow read: if request.auth != null && exists(/databases/$(database)/documents/users/$(request.auth.uid));
      allow create: if true; // Allow anyone to submit feedback
    }
  }
} 